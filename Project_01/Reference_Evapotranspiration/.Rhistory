install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
rm(list = ls())
library(package = "raster")
library(package = "sp")
library(package = "rgdal")
library(package = "dplyr")
library(package = "tcltk")
library(package = "stringr")
library(package = "ncdf4")
if (exists('utils::choose.dir')) {
Folder.Data <- choose.dir(caption = "Select TerraClimate Dataset Folder: ")
Folder.Output <- choose.dir(caption = "Select A Folder To Save Output Files: ")
} else {
Folder.Data <- tk_choose.dir(caption = "Select TerraClimate Dataset Folder: ")
Folder.Output <- tk_choose.dir(caption = "Select A Folder To Save Output Files: ")
}
############### List Files in a Directory ###############
List.Files <- list.files(path = Folder.Data,
pattern = "*.nc",
full.names = FALSE)
############### Load Data ###############
result <- list()
Vector.Year <- c()
for (i in List.Files) {
# TEST : (i = List.Files[1])
# WARNING: Edited Base On Your Files (e.g. TerraClimate_pet_1989.nc)
year <- str_extract(string = i, pattern = "[[:digit:]]+")
Vector.Year <- c(Vector.Year, year)
var <- str_extract(string = i, pattern = "_.+?_") %>% str_sub(start = 2, end = -2)
if (var != "pet") {
next
}
# WARNING: Edited Base On Your Files (e.g. Each File Contain 12 Month)
for (m in 1:12) {
nc.File <- paste0(Folder.Data, "/", i)
SubList.Name <- paste0(var, "_", year, "_", month.abb[m])
Read.Raster <- raster(x = nc.File, band = m) %>%
readAll()
Iran <- as(raster::extent(x = c(42, 65, 23, 41)), "SpatialPolygons")
proj4string(Iran) <- crs(Read.Raster)
Raster.Iran <- raster::crop(x = Read.Raster,
y = Iran)
result[[SubList.Name]] <- Raster.Iran
print(SubList.Name)
}
}
saveRDS(object = result,
file = paste0(Folder.Output, "/", "TerraClimate_Iran_Raster_",
min(Vector.Year), "_", max(Vector.Year), "_4000m.rds"))
rm(list = ls())
library(package = "dplyr")
library(package = "stringr")
library(package = "raster")
library(package = "sp")
library(package = "pbapply")
if (exists('utils::choose.dir')) {
data <- readRDS(file = choose.file(caption = "Select Raster File: "))
Folder.Output <- choose.dir(caption = "Select A Folder To Save Output Files: ")
} else {
data <- readRDS(file = tk_choose.files(caption = "Select Raster File: "))
Folder.Output <- tk_choose.dir(caption = "Select A Folder To Save Output Files: ")
}
# Load Shapefile Mashhad
CRS.Original <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
Shapefile.Path <- tk_choose.dir(caption = "Select A Folder Contain Limit Shapefile: ")
Shapefile.Name <- "Limit"
Mashhad <- rgdal::readOGR(dsn = Shapefile.Path,
layer = Shapefile.Name) %>%
sp::spTransform(CRSobj = sp::CRS(CRS.Original))
# Crop RasterLayer Using the Shapefile Vector Extent
data.mashhad <- pbapply::pblapply(X = data,
FUN = raster::crop, y = raster::extent(x = Mashhad) + 0.2)
saveRDS(object = data.mashhad,
file = paste0(Folder.Output, "/", "TerraClimate_Mashhad_Raster_1989_2019_4000m.rds"))
rm(data)
# Load Raster Data
data.mashhad <- readRDS(file = tk_choose.files(caption = "Select *.rds File (TerraClimate_Mashhad_Raster_1989_2019_4000m.rds): "))
myRaster <- raster(nrows = dim(data.mashhad[[1]])[1] * 40,
ncols = dim(data.mashhad[[1]])[2] * 40,
xmn = extent(data.mashhad[[1]])[1],
xmx = extent(data.mashhad[[1]])[2],
ymn = extent(data.mashhad[[1]])[3],
ymx = extent(data.mashhad[[1]])[4]) # 100m
variable <- unique(x = gsub(pattern = "_.*", replacement = "", x = names(data.mashhad)))
variable <- unique(x = gsub(pattern = "_.*", replacement = "", x = names(data.mashhad)))
for (var in variable) {
result <- pbapply::pblapply(X = data.mashhad[grepl(pattern = var,
x = names(data.mashhad))],
FUN = raster::resample, y = myRaster, method = "bilinear")
saveRDS(object = result,
file = paste0(Folder.Output, "/", "TerraClimate_Mashhad_Raster_", var, "_1989_2019_100m.rds"))
}
